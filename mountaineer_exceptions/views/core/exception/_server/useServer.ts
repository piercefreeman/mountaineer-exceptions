/*
 * This file was generated by Mountaineer v0.1.0. Do not edit it manually.
 */

import React, { useState } from 'react';
import { applySideEffect } from '../../../_server/api';
import LinkGenerator from '../../../_server/links';

import { ExceptionRender, ExceptionController } from '../../../_server/controllers';

declare global {
  var SERVER_DATA: any;
}

export interface ServerState extends ExceptionRender, ExceptionController {
  linkGenerator: typeof LinkGenerator;
}

export type ExceptionRenderOptional = Partial<ExceptionRender>;

export const useServer = () : ServerState => {
  const [serverState, setServerState] = useState(SERVER_DATA['ExceptionController'] as ExceptionRender);

  const setControllerState = (payload: ExceptionRenderOptional) => {
    setServerState((state) => ({
      ...state,
      ...payload,
    }));
  };

  return {
  ...serverState,
  'linkGenerator': LinkGenerator
}
};